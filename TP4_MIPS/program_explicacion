000000 00000 01101 00100 00010 000010 // shift right logical immediate
000000 ----- ttttt ddddd SSSSS 000010 // 1101 >> 2 = 11 (3)
00000000000011010010000010000010

000000 00011 00110 00100 00000 000100 // shift left logical
000000 sssss ttttt ddddd ----- 000100 // 110 << 3 = 110000 (48)
00000000011001100010000000000100

000000 00111 00010 00100 00000 100001 // add unsigned
000000 sssss ttttt ddddd ----- 100001 // 7 + 2 = 9
00000000111000100010000000100001

000000 00010 00011 00100 00000 100011 // substract unsigned
000000 sssss ttttt ddddd ----- 100011 // 2 - 3 = -1
00000000010000110010000000100011

100011 00010 00100 0000000000110011 // load word
100011 sssss ttttt CCCCCCCCCCCCCCCC // 2 + 51 = 53
10001100010001000000000000110011

001100 10101 00100 0000000000011100 // and immediate
001100 sssss ttttt CCCCCCCCCCCCCCCC // 10101 & 11100 = 10100
00110010101001000000000000011100

001111 00000 00100 0000001111111111 // load upper immediate
001111 sssss ttttt CCCCCCCCCCCCCCCC // 
00111100000001000000001111111111

000010 AAAAAAAAAAAAAAAAAAAAAAAAAA // Jump
000010 00000000000000000000000000